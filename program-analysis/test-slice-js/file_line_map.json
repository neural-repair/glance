[
    {
        "file": "loops.js",
        "line_num": 10,
        "expected_output": "function removeHtmlMarkup(s) {let tag = false;let quote = false;for (let c of s) {for (let i = 0; i < 5; i++) {if (c === '<' && !quote) {tag = true;}}}}"
    },
    {
        "file": "loops.js",
        "line_num": 31,
        "expected_output": "function calculateSum(s) {let sum = 1;let x = window.prompt(\"Input\");while (x >= 0) {sum = sum + x;}return sum;}"
    },
    {
        "file": "loops.js",
        "line_num": 45,
        "expected_output": "let sum = 1;let x = window.prompt(\"Input\");while (x >= 0){sum = sum + x;x = window.prompt(\"Input\");}console.log(\"The total is\",sum);"
    },
    {
        "file": "conditionals.js",
        "line_num": 12,
        "expected_output": "function removeHtmlMarkup(s) {let tag = false;let quote = false;for (let c of s) {for (let i = 0; i < 5; i++) {if (c === '<' && !quote) {tag = true;} else if (c === '>' && !quote) {tag = false;}}}}"
    },
    {
        "file": "conditionals.js",
        "line_num": 14,
        "expected_output": "function removeHtmlMarkup(s) {let tag = false;let quote = false;for (let c of s) {for (let i = 0; i < 5; i++) {if (c === '<' && !quote) {tag = true;} else if (c === '>' && !quote) {tag = false;} else if (c === '\"' || c === \"'\" && tag) {quote = !quote;}}}}"
    },
    {
        "file": "conditionals.js",
        "line_num": 18,
        "expected_output": "function removeHtmlMarkup(s) {let tag = false;let quote = false;let out = '';for (let c of s) {for (let i = 0; i < 5; i++) {if (c === '<' && !quote) {tag = true;} else if (c === '>' && !quote) {tag = false;} else if (c === '\"' || c === \"'\" && tag) {quote = !quote;} else if (!tag) {out = out + c;} else {tag = out + quote;}}}}"
    },
    {
        "file": "conditionals.js",
        "line_num": 31,
        "expected_output": "function getExamGrade(marks, threshold) {marks = marks / threshold;if (marks > 95)return \"Grade: A+ with marks\" + marks;}"
    },
    {
        "file": "conditionals.js",
        "line_num": 46,
        "expected_output": "function getExamGradeWithThreshold(marks, threshold) {marks = marks / threshold;if (marks > 95) {if (marks + threshold > 100)return marks + ' 100';elsereturn `Grade: A+ with marks ${marks}`;}}"
    },
    {
        "file": "conditionals.js",
        "line_num": 74,
        "expected_output": "function removeHtmlMarkupWithoutBraces(s) {let tag = false;let quote = false;for (let c of s) {for (let i = 0; i < 5; i++) {if (c === '<' && !quote)tag = true;else if (c === '>' && !quote)tag = false;else if (c === '\"' || c === \"'\" && tag)quote = !quote;}}}"
    },
    {
        "file": "objects.js",
        "line_num": 10,
        "expected_output": "let obj = [{fruit: 'apple',color: 'red',variant: ['red', 'green']}];module.exports = {obj};"
    },
    {
        "file": "objects.js",
        "line_num": 17,
        "expected_output": "let obj = [{fruit: 'apple',color: 'red',variant: ['red', 'green']}];const label = 'Color';const newObj = obj.forEach(o => console.log(o)).map(o => label + ' ' + o.color).filter(o => o.variant.includes('red')).sort();"
    },
    {
        "file": "conditionals.js",
        "line_num": 48,
        "expected_output": "function getExamGradeWithThreshold(marks, threshold) {marks = marks / threshold;if (marks > 95) {if (marks + threshold > 100)return marks + ' 100';elsereturn `Grade: A+ with marks ${marks}`;}}"
    },
    {
        "file": "conditionals.js",
        "line_num": 34,
        "expected_output": "function getExamGrade(marks, threshold) {marks = marks / threshold;if (marks > 95)return \"Grade: A+ with marks\" + marks;else if (marks < 94 && marks > 80)return \"Grade: A with marks\" + marks;else if (marks < 80 && marks > 70)return \"Grade: B with marks\" + marks;}"
    },
    {
        "file": "conditionals.js",
        "line_num": 50,
        "expected_output": "function getExamGradeWithThreshold(marks, threshold) {marks = marks / threshold;if (marks > 95) {if (marks + threshold > 100)return marks + ' 100';elsereturn `Grade: A+ with marks ${marks}`;} else if (marks < 94 && marks > 80) {return `Grade: A with marks ${marks}`;}}"
    },
    {
        "file": "objects.js",
        "line_num": 5,
        "expected_output": "let obj = [{fruit: 'apple',color: 'red',variant: ['red', 'green']}];"
    },
    {
        "file": "conditionals.js",
        "line_num": 98,
        "expected_output": "function getExamGradeWithThreshold2(marks, threshold) {marks = marks / threshold;if (marks > 95) {if (marks + threshold > 100)return marks + ' 100';} else if (marks < 94 && marks > 80) {return `Grade: A with marks ${marks}`;} else if (marks < 80 && marks > 70) {return `Grade: B with marks ${marks}`;} else if (marks < 70 && marks > 60) {return `Grade: C with marks ${marks}`;} else {return `Grade: F with marks ${marks}`;}}"
    }
]
